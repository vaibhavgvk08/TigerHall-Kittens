# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Coordinates {
  lat: Float!
  long: Float!
}

type Tiger {
  _id: ID!
  name: String
  dob: String
  lastSeenTimeStamp : String!
  lastSeenCoordinates : Coordinates!
  imageURL : String
  reporterUserName : String!
}

type User {
  id: ID!
  username: String!
  email: String!
  password: String!
}

type Response {
  status: String!
  error: String
}

type TigerSightings {
  name: String
  sightings: [Sighting]
}

type Sighting {
  timestamp : String
  coordinates : Coordinates
}

type LoginResponse {
  status: String!
  error: String
  AccessToken: String!
}

input InputParams {
  offset: Int
  limit: Int
}

type Query {
  listAllTigers(input: InputParams): [Tiger!]!
  listAllSightingsOfATiger(_id: ID!): TigerSightings!
}

type Mutation {
  createTiger(input: createTigerInput!): Tiger!
  sightingOfTiger(_id: ID!, input: sightingOfTigerInput!): Tiger!

  register(input: createUserInput!): Response!
  login(input: loginUserInput!): LoginResponse!
}

input InputCoordinates {
  lat: Float!
  long: Float!
}

input createTigerInput {
  name: String!
  dob: String!
  lastSeenTimeStamp : String!
  imageURL : String
  lastSeenCoordinates : InputCoordinates!
  reporterUserName : String!
}

input sightingOfTigerInput {
  lastSeenTimeStamp : String!
  lastSeenCoordinates : InputCoordinates!
  imageURL : String!
  reporterUserName : String!
}

input createUserInput {
  username: String!
  email: String!
  password: String!
}

input loginUserInput {
  username: String!
  password: String!
}